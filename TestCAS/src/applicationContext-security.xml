<?xml version="1.0" encoding="UTF-8"?>

<!--
  - Sample namespace-based configuration
  -
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">


 <bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
    <property name="service" value="https://zgzw020.incita.local:8181/TestCAS/j_spring_cas_security_check"/>
    <property name="sendRenew" value="false"/>
  </bean>


	<!-- configuracion de seguridad para HTTP -->
    <sec:http entry-point-ref="casEntryPoint" use-expressions="true">
        <sec:intercept-url pattern="/**" access="isAuthenticated()" />  
	<sec:logout logout-success-url="/j_spring_cas_security_logout"/>
    <sec:custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER"/>
    <sec:custom-filter ref="singleLogoutFilter" before="CAS_FILTER"/>
        <sec:custom-filter position="CAS_FILTER" ref="casFilter" />
    </sec:http>
    
    <bean id="casFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
    	<property name="authenticationManager" ref="casAuthenticationManager"/>
  </bean>
  
  <!--  punto de entrada -->
  <bean id="casEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
    <property name="loginUrl" value="https://zgzw020.incita.local:8181/cas/login"/>
    <property name="serviceProperties" ref="serviceProperties"/>
  </bean>




	<!-- control de autentificacion -->
	<sec:authentication-manager alias="casAuthenticationManager">
		<sec:authentication-provider ref="casAuthenticationProvider" />
	</sec:authentication-manager>
	
	
	<bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
    	<property name="authenticationUserDetailsService">
      		<bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
        		<constructor-arg ref="userService" />
      		</bean>
    	</property>
    	<property name="serviceProperties" ref="serviceProperties" />
    	<property name="ticketValidator">
      		<bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
        		<constructor-arg index="0" value="http://zgzw020.incita.local:8080/cas" />
      		</bean>
    	</property>
    	<property name="key" value="TestCAS-KEY"/>
  	</bean>
    
   <bean id="datasourceCAS" class="org.springframework.jndi.JndiObjectFactoryBean">
   		<property name="jndiName" value="jdbc/CASDatasource" />
	</bean>

    <sec:jdbc-user-service id="userService" data-source-ref="datasourceCAS" />
    <!-- 
    <sec:jdbc-user-service data-source-ref=""/>
    -->
    
    <!-- This filter handles a Single Logout Request from the CAS Server -->
  <bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>
  
  <!-- This filter redirects to the CAS Server to signal Single Logout should be performed -->
  <bean id="requestSingleLogoutFilter"
        class="org.springframework.security.web.authentication.logout.LogoutFilter">
    <constructor-arg value="https://zgzw020.incita.local:8181/cas/logout"/>
    <constructor-arg>
      <bean class=
          "org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
    </constructor-arg>
    <property name="filterProcessesUrl" value="/j_spring_cas_security_logout"/>
  </bean>
</beans>
